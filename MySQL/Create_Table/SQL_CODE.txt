CREATE TABLE student_info (
    student_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(20) NOT NULL,
    last_name VARCHAR(20) NOT NULL,
    email VARCHAR(40) NOT NULL,
    password VARCHAR(20) NOT NULL,
    phone VARCHAR(10) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP);

CREATE TABLE course_info (
    course_id INT PRIMARY KEY AUTO_INCREMENT,
    course_name VARCHAR(50) NOT NULL,
    description TEXT NOT NULL,
    instructor VARCHAR(50) NOT NULL,
    length INT NOT NULL,
    cost DECIMAL(10,2) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP);

CREATE TABLE payment (
    payment_id INT PRIMARY KEY AUTO_INCREMENT,
    student_id INT NOT NULL,
    payment_status ENUM('Paid', 'Unpaid') NOT NULL,
    started_at DATE NOT NULL,
    end_at DATE NOT NULL,
    FOREIGN KEY (student_id) REFERENCES student_info(student_id));

CREATE TABLE quiz_question (
    question_id INT PRIMARY KEY AUTO_INCREMENT,
    course_id INT NOT NULL,
    question TEXT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (course_id) REFERENCES course_info(course_id));

CREATE TABLE quiz_result (
    result_id INT PRIMARY KEY AUTO_INCREMENT,
    question_id INT NOT NULL,
    answer TEXT NOT NULL,
    is_correct BOOLEAN NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (question_id) REFERENCES quiz_question(question_id));

CREATE TABLE certificate (
    certificate_id INT AUTO_INCREMENT PRIMARY KEY,
    course_id INT NOT NULL,
    student_id INT NOT NULL,
    certificate_name VARCHAR(30) NOT NULL,
    certificate_description TEXT NOT NULL,
    certificate_date DATE NOT NULL,
    FOREIGN KEY (course_id) REFERENCES course_info(course_id),
    FOREIGN KEY (student_id) REFERENCES student_info(student_id));

CREATE TABLE student_progress (
    progress_id INT PRIMARY KEY AUTO_INCREMENT,
    student_id INT NOT NULL,
    course_id INT NOT NULL,
    percentage INT NOT NULL,
    FOREIGN KEY (student_id) REFERENCES student_info(student_id),
    FOREIGN KEY (course_id) REFERENCES course_info(course_id));

CREATE TABLE student_feedback (
    feedback_id INT PRIMARY KEY AUTO_INCREMENT,
    student_id INT NOT NULL,
    course_id INT NOT NULL,
    rating INT,
    comments TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES student_info(student_id),
    FOREIGN KEY (course_id) REFERENCES course_info(course_id));

CREATE TABLE instructor_info (
    instructor_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(20) NOT NULL,
    last_name VARCHAR(20) NOT NULL,
    email VARCHAR(40) NOT NULL,
    password VARCHAR(20) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP);

CREATE TABLE instructor_courses (
    instructor_course_id INT PRIMARY KEY AUTO_INCREMENT,
    instructor_id INT NOT NULL,
    course_id INT NOT NULL,
    course_name VARCHAR(50) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (instructor_id) REFERENCES instructor_info(instructor_id),
    FOREIGN KEY (course_id) REFERENCES course_info(course_id));
